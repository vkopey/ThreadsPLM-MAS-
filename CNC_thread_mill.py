# -*- coding: utf-8 -*-
"""CAM-модуль для фрезерування різьби з довільним профілем на фрезерному верстаті з ЧПК. Python 2.7-3"""

import numpy as np
pi=np.pi
import matplotlib.pyplot as plt

def helixPoints(r, h, p, fi, n, z0=0):
    """Повертає список точок гвинтової лінії. r - мінімальний радіус, h - висота, p - крок, fi - кут нахилу, n - кількість точок на одному витку, z0 - осьове зміщення"""
    a=np.tan(fi)*p/(2*pi)
    b=p/(2*pi)
    k=h/p # кількість витків
    N=int(n*k) # загальна кількість точок
    t=np.linspace(0,h/b,N) # параметр
    x=(r+a*t)*np.cos(-t)
    y=(r+a*t)*np.sin(-t)
    z=b*t+z0 # вісь гвинтової лінії
    return list(zip(x,y,z)) # тут list() потрібен тільки для python 3

def TreadMulti(R, Z, h=10, p=2, fi=0, n=64):
    """Повертає список точок для фрезерування різьби в кілька проходів. R, Z - списки з радіусами (x-координата) і z-коодинатою перших точок гвинтових ліній. Іншими словами це x,z-координати точок профілю. Для одного проходу R=[r] Z=[0], де r - мінімальний радіус різьби. h - висота, p - крок, fi - кут нахилу, n - кількість точок на одному витку. Довжина різьби h повинна бути кратна кроку p"""

    fp=max(R)+10,0,0 # перша точка віддалена по x на 10 мм
    P=[] # список усіх точок
    for r, z in zip(R, Z): # для кожної точки профілю
        P.append(fp) # додати першу
        H=helixPoints(r=r, h=h, p=p, fi=fi, n=n, z0=z) # точки 1 гвинтової лінії
        P+=H # додати їх
        a=H[-1] # остання точка на гвинтовій лінії
        P.append((a[0]+10, a[1], a[2])) # додати точку відведення
    return P

def Gcode(P, fileName=None):
    """Повертає G-код за точками P"""
    S=["N10 G1 G54 G17 G21 G90 G94 M05 T0 F100 S1000", "N20 M03"] # поч. код
    i=30 # номер рядка
    for p in P: # для кожної точки
        x, y, z=p[0], p[1], p[2]
        x, y, z=(round(k, 3) for k in (x, y, z)) # заокруглити до 3 знаків
        s="N%d G1 X%5.3f Y%5.3f Z%5.3f"%(i, x, y, z) # кадр програми
        S.append(s)
        i+=10 # наступний кадр
    S.append("N%d M05"%i) # виключити шпиндель
    code="\n".join(S)
    if fileName:
        f=open(fileName, 'w') # зберегти файл
        f.write(code)
        f.close()
    return code

def plotCNC(P):
    """"візуалізація точок за допомогою Matplotlib"""

    # координати
    X=[p[0] for p in P]
    Y=[p[1] for p in P]
    Z=[p[2] for p in P]

    # тривимірні графіки
    from mpl_toolkits.mplot3d import Axes3D
    fig = plt.figure() # рисунок
    ax = Axes3D(fig) # система координат
    ax.plot3D(X,Y,Z, 'k.-') # лінії
    ax.set_xlabel('x')
    ax.set_ylabel('y')
    ax.set_zlabel('z')
    plt.show()

## приклад генерації коду
if __name__=="__main__":
    rf=10 # радіус фрези (0, якщо система ЧПК має команди корекції)
    # товщина фрези 0.5 мм
    # перші два проходи - примірочний r=10 і остаточний для 1-ї точки профілю
    P=TreadMulti(R=[10+rf, 9.5+rf], Z=[0, 0],  h=14, p=2, fi=0, n=64)
    # наступні два проходи - примірочний r=10 і остаточний для 2-ї точки профілю
    #P=TreadMulti(R=[10+rf, 9.6+rf], Z=[0.3, 0.3],  h=14, p=2, fi=0, n=64)
    # додатково ще два чистових проходи з малою подачею 50 мм/хв
    code=Gcode(P, "cnc.txt") # код, зберегти у файл
    plotCNC(P)
